{"ast":null,"code":"import { FETCH_ALL_IMAGES_PENDING, FETCH_ALL_IMAGES_SUCCESS, FETCH_ALL_IMAGES_FAILED, ADD_NEW_IMAGE_PENDING, ADD_NEW_IMAGE_SUCCESS, ADD_NEW_IMAGE_FAILED, DELETE_IMAGE_PENDING, DELETE_IMAGE_SUCCESS, DELETE_IMAGE_FAILED, UPDATE_IMAGE_PENDING, UPDATE_IMAGE_FAILED, UPDATE_IMAGE_SUCCESS, FETCH_IMAGE_FAILED, FETCH_IMAGE_SUCCESS, FETCH_IMAGE_PENDING } from \"./constants\";\nconst initialState = {\n  all: [],\n  err: {}\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_IMAGES_PENDING:\n    case ADD_NEW_IMAGE_PENDING:\n    case DELETE_IMAGE_PENDING:\n    case UPDATE_IMAGE_PENDING:\n    case FETCH_IMAGE_PENDING:\n      return state;\n\n    case FETCH_ALL_IMAGES_SUCCESS:\n    case FETCH_IMAGE_SUCCESS:\n      // case UPDATE_IMAGE_SUCCESS:\n      return { ...state,\n        all: action.payload\n      };\n\n    case ADD_NEW_IMAGE_SUCCESS:\n      return { ...state,\n        all: [...state.all, action.payload]\n      };\n\n    case UPDATE_IMAGE_SUCCESS:\n      return { ...state,\n        all: [...state.all.filter(IMAGE => IMAGE.id !== action.payload.id), action.payload]\n      };\n\n    case DELETE_IMAGE_SUCCESS:\n      return { ...state,\n        all: state.all.filter(IMAGE => IMAGE.id !== action.payload.id)\n      };\n\n    case FETCH_ALL_IMAGES_FAILED:\n    case ADD_NEW_IMAGE_FAILED:\n    case DELETE_IMAGE_FAILED:\n    case UPDATE_IMAGE_FAILED:\n    case FETCH_IMAGE_FAILED:\n      return { ...state,\n        err: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/store/images/reducer.js"],"names":["FETCH_ALL_IMAGES_PENDING","FETCH_ALL_IMAGES_SUCCESS","FETCH_ALL_IMAGES_FAILED","ADD_NEW_IMAGE_PENDING","ADD_NEW_IMAGE_SUCCESS","ADD_NEW_IMAGE_FAILED","DELETE_IMAGE_PENDING","DELETE_IMAGE_SUCCESS","DELETE_IMAGE_FAILED","UPDATE_IMAGE_PENDING","UPDATE_IMAGE_FAILED","UPDATE_IMAGE_SUCCESS","FETCH_IMAGE_FAILED","FETCH_IMAGE_SUCCESS","FETCH_IMAGE_PENDING","initialState","all","err","state","action","type","payload","filter","IMAGE","id"],"mappings":"AAAA,SACEA,wBADF,EAEEC,wBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,oBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,mBATF,EAUEC,oBAVF,EAWEC,mBAXF,EAYEC,oBAZF,EAaEC,kBAbF,EAcEC,mBAdF,EAeEC,mBAfF,QAgBO,aAhBP;AAkBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,EADc;AAEnBC,EAAAA,GAAG,EAAE;AAFc,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,wBAAL;AACA,SAAKG,qBAAL;AACA,SAAKG,oBAAL;AACA,SAAKG,oBAAL;AACA,SAAKK,mBAAL;AACE,aAAOI,KAAP;;AACF,SAAKjB,wBAAL;AACA,SAAKY,mBAAL;AACE;AACA,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,GAAG,EAAEG,MAAM,CAACE;AAFP,OAAP;;AAKF,SAAKjB,qBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,GAAG,EAAE,CAAC,GAAGE,KAAK,CAACF,GAAV,EAAeG,MAAM,CAACE,OAAtB;AAFA,OAAP;;AAKF,SAAKV,oBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,GAAG,EAAE,CACH,GAAGE,KAAK,CAACF,GAAN,CAAUM,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAP,CAAeG,EAAtD,CADA,EAEHL,MAAM,CAACE,OAFJ;AAFA,OAAP;;AAQF,SAAKd,oBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,GAAG,EAAEE,KAAK,CAACF,GAAN,CAAUM,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAP,CAAeG,EAAtD;AAFA,OAAP;;AAKF,SAAKtB,uBAAL;AACA,SAAKG,oBAAL;AACA,SAAKG,mBAAL;AACA,SAAKE,mBAAL;AACA,SAAKE,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,GAAG,EAAEE,MAAM,CAACE;AAFP,OAAP;;AAIF;AACE,aAAOH,KAAP;AA9CJ;AAgDD,CAjDD","sourcesContent":["import {\n  FETCH_ALL_IMAGES_PENDING,\n  FETCH_ALL_IMAGES_SUCCESS,\n  FETCH_ALL_IMAGES_FAILED,\n  ADD_NEW_IMAGE_PENDING,\n  ADD_NEW_IMAGE_SUCCESS,\n  ADD_NEW_IMAGE_FAILED,\n  DELETE_IMAGE_PENDING,\n  DELETE_IMAGE_SUCCESS,\n  DELETE_IMAGE_FAILED,\n  UPDATE_IMAGE_PENDING,\n  UPDATE_IMAGE_FAILED,\n  UPDATE_IMAGE_SUCCESS,\n  FETCH_IMAGE_FAILED,\n  FETCH_IMAGE_SUCCESS,\n  FETCH_IMAGE_PENDING\n} from \"./constants\";\n\nconst initialState = {\n  all: [],\n  err: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_IMAGES_PENDING:\n    case ADD_NEW_IMAGE_PENDING:\n    case DELETE_IMAGE_PENDING:\n    case UPDATE_IMAGE_PENDING:\n    case FETCH_IMAGE_PENDING:\n      return state;\n    case FETCH_ALL_IMAGES_SUCCESS:\n    case FETCH_IMAGE_SUCCESS:\n      // case UPDATE_IMAGE_SUCCESS:\n      return {\n        ...state,\n        all: action.payload\n      };\n\n    case ADD_NEW_IMAGE_SUCCESS:\n      return {\n        ...state,\n        all: [...state.all, action.payload]\n      };\n\n    case UPDATE_IMAGE_SUCCESS:\n      return {\n        ...state,\n        all: [\n          ...state.all.filter(IMAGE => IMAGE.id !== action.payload.id),\n          action.payload\n        ]\n      };\n\n    case DELETE_IMAGE_SUCCESS:\n      return {\n        ...state,\n        all: state.all.filter(IMAGE => IMAGE.id !== action.payload.id)\n      };\n\n    case FETCH_ALL_IMAGES_FAILED:\n    case ADD_NEW_IMAGE_FAILED:\n    case DELETE_IMAGE_FAILED:\n    case UPDATE_IMAGE_FAILED:\n    case FETCH_IMAGE_FAILED:\n      return {\n        ...state,\n        err: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}