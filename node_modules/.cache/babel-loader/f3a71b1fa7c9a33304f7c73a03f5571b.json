{"ast":null,"code":"import axios from \"axios\"; // import * as types from \"./constants\";\n\nimport { FETCH_ALL_USERS_PENDING, FETCH_ALL_USERS_SUCCESS, FETCH_ALL_USERS_FAILED, ADD_NEW_USER_SUCCESS, ADD_NEW_USER_PENDING, ADD_NEW_USER_FAILED, UPDATE_USER_PENDING, UPDATE_USER_FAILED, UPDATE_USER_SUCCESS, DELETE_USER_FAILED, DELETE_USER_PENDING, DELETE_USER_SUCCESS, FETCH_USER_PENDING, FETCH_USER_SUCCESS, FETCH_USER_FAILED, LOGIN_USER_FAILED, LOGIN_USER_PENDING, LOGIN_USER_SUCCESS } from \"./constants\";\nexport const fetchAllUsers = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_USERS_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/users`);\n    dispatch({\n      type: FETCH_ALL_USERS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_USERS_FAILED,\n      payload: err\n    });\n  }\n};\nexport const fetchUser = id => async dispatch => {\n  dispatch({\n    type: FETCH_USER_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/users/${id}`);\n    dispatch({\n      type: FETCH_USER_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_USER_FAILED,\n      payload: err\n    });\n  }\n};\nexport const loginUser = user => async dispatch => {\n  dispatch({\n    type: LOGIN_USER_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/users/login`, user);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_USER_FAILED,\n      payload: err\n    });\n  }\n}; // Add new USER\n// export const addNewUser = newUser => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_USER_PENDING\n//   });\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/users`,\n//       newUser\n//     );\n//     dispatch({\n//       type: ADD_NEW_USER_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_USER_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// // Delete a USER\n// export const deleteUser = id => async dispatch => {\n//   dispatch({\n//     type: DELETE_USER_PENDING\n//   });\n//   try {\n//     let response = await axios.delete(`http://localhost:8000/USERs/${id}`);\n//     dispatch({\n//       type: DELETE_USER_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: DELETE_USER_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// // Update USER\n// export const updateUser = (updateUSER, id) => async dispatch => {\n//   dispatch({\n//     type: UPDATE_USER_PENDING\n//   });\n//   try {\n//     let response = await axios.patch(\n//       `http://localhost:8000/USERs/${id}`,\n//       updateUSER\n//     );\n//     dispatch({\n//       type: UPDATE_USER_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: UPDATE_USER_FAILED,\n//       payload: err\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/store/users/actions.js"],"names":["axios","FETCH_ALL_USERS_PENDING","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILED","ADD_NEW_USER_SUCCESS","ADD_NEW_USER_PENDING","ADD_NEW_USER_FAILED","UPDATE_USER_PENDING","UPDATE_USER_FAILED","UPDATE_USER_SUCCESS","DELETE_USER_FAILED","DELETE_USER_PENDING","DELETE_USER_SUCCESS","FETCH_USER_PENDING","FETCH_USER_SUCCESS","FETCH_USER_FAILED","LOGIN_USER_FAILED","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","fetchAllUsers","dispatch","type","response","get","payload","data","err","fetchUser","id","loginUser","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,uBADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,mBAPF,EAQEC,kBARF,EASEC,mBATF,EAUEC,kBAVF,EAWEC,mBAXF,EAYEC,mBAZF,EAaEC,kBAbF,EAcEC,kBAdF,EAeEC,iBAfF,EAgBEC,iBAhBF,EAiBEC,kBAjBF,EAkBEC,kBAlBF,QAmBO,aAnBP;AAqBA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEpB;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIqB,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,6BAAX,CAArB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEnB,uBADC;AAEPsB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAElB,sBADC;AAEPqB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMC,SAAS,GAAGC,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAC/CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIS,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,+BAA8BK,EAAG,EAA5C,CAArB;AACAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,kBADC;AAEPU,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,iBADC;AAEPS,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMG,SAAS,GAAGC,IAAI,IAAI,MAAMV,QAAN,IAAkB;AACjDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEJ;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIK,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,mCAAX,EAA+CO,IAA/C,CAArB;AACAV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,kBADC;AAEPM,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,iBADC;AAEPQ,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\n// import * as types from \"./constants\";\nimport {\n  FETCH_ALL_USERS_PENDING,\n  FETCH_ALL_USERS_SUCCESS,\n  FETCH_ALL_USERS_FAILED,\n  ADD_NEW_USER_SUCCESS,\n  ADD_NEW_USER_PENDING,\n  ADD_NEW_USER_FAILED,\n  UPDATE_USER_PENDING,\n  UPDATE_USER_FAILED,\n  UPDATE_USER_SUCCESS,\n  DELETE_USER_FAILED,\n  DELETE_USER_PENDING,\n  DELETE_USER_SUCCESS,\n  FETCH_USER_PENDING,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_FAILED,\n  LOGIN_USER_FAILED,\n  LOGIN_USER_PENDING,\n  LOGIN_USER_SUCCESS\n} from \"./constants\";\n\nexport const fetchAllUsers = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_USERS_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/users`);\n    dispatch({\n      type: FETCH_ALL_USERS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_USERS_FAILED,\n      payload: err\n    });\n  }\n};\n\nexport const fetchUser = id => async dispatch => {\n  dispatch({\n    type: FETCH_USER_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/users/${id}`);\n    dispatch({\n      type: FETCH_USER_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_USER_FAILED,\n      payload: err\n    });\n  }\n};\n\nexport const loginUser = user => async dispatch => {\n  dispatch({\n    type: LOGIN_USER_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/users/login`, user);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_USER_FAILED,\n      payload: err\n    });\n  }\n};\n\n// Add new USER\n// export const addNewUser = newUser => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_USER_PENDING\n//   });\n\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/users`,\n//       newUser\n//     );\n//     dispatch({\n//       type: ADD_NEW_USER_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_USER_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// // Delete a USER\n// export const deleteUser = id => async dispatch => {\n//   dispatch({\n//     type: DELETE_USER_PENDING\n//   });\n//   try {\n//     let response = await axios.delete(`http://localhost:8000/USERs/${id}`);\n//     dispatch({\n//       type: DELETE_USER_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: DELETE_USER_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// // Update USER\n// export const updateUser = (updateUSER, id) => async dispatch => {\n//   dispatch({\n//     type: UPDATE_USER_PENDING\n//   });\n\n//   try {\n//     let response = await axios.patch(\n//       `http://localhost:8000/USERs/${id}`,\n//       updateUSER\n//     );\n//     dispatch({\n//       type: UPDATE_USER_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: UPDATE_USER_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}