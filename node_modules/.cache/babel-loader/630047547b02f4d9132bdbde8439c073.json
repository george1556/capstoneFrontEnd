{"ast":null,"code":"var _jsxFileName = \"/Users/george/Desktop/h2studiofrontend/src/components/cart/Cart.js\";\nimport React, { useState } from \"react\";\nimport TopNavigationaBar from \"../TopNavigationBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport { MDBRow, MDBCard, MDBCardBody, MDBCardTitle, MDBTooltip, MDBTable, MDBTableBody, MDBTableHead, MDBInput, MDBBtn, MDBIcon } from \"mdbreact\";\nimport { updateCart } from \"../../store/cart/actions\";\n\nconst Cart = props => {\n  const [columns, setcolumns] = useState({});\n  const cart = useSelector(state => state.shoppingCart.cart); //const products = useSelector(state => state.products.all);\n\n  const dispatch = useDispatch();\n  const [newCart, setNewCart] = useState(cart); //   const newCart = cart;\n\n  const removeOneFromCart = id => {\n    //   let updatedCart =\n    // console.log(\"cart before: \", cart);\n    // setNewCart(cart);\n    // console.log(\"new cart before findindex, after setting again: \", newCart);\n    let itemIndex = newCart.findIndex(cartItem => cartItem.id === id); // console.log(\"new cart before: \", newCart);\n    // setNewCart(newCart.splice(parseInt(itemIndex), 1));\n    // console.log(\"new cart after: \", newCart);\n\n    let updatedCart = cart.splice(itemIndex, 1);\n    dispatch(updateCart(updatedCart));\n  };\n\n  console.log(\"CART CONTENTS: \", cart); //Count number of items in cart to determine quantities\n\n  let cartCount = {};\n  cart.forEach(cartItem => {\n    if (cartCount.hasOwnProperty(cartItem.id)) {\n      cartCount[cartItem.id]++;\n    } else {\n      cartCount[cartItem.id] = 1;\n    }\n  }); //Create an array matching cart contents with quantities\n\n  let cartArrayWithQuantities = [];\n\n  for (const key in cartCount) {\n    let currentCartItem = cart.find(cartItem => cartItem.id == key);\n    currentCartItem[\"quantity\"] = cartCount[key];\n    cartArrayWithQuantities.push(currentCartItem);\n  }\n\n  console.log(\"cartArrayWithQuantities: \", cartArrayWithQuantities);\n  let cartRows = cartArrayWithQuantities.map(cartItem => React.createElement(CartItem, {\n    product: cartItem,\n    key: cartItem.id,\n    removeOneFromCart: removeOneFromCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TopNavigationaBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    className: \"my-2\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(MDBCard, {\n    className: \"w-100\",\n    style: {\n      marginTop: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, cartRows.length === 0 ? React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(MDBCardTitle, {\n    style: {\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(MDBIcon, {\n    icon: \"shopping-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \"\\xA0\\xA0You have nothing in your cart.\")) : React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(MDBTable, {\n    hover: true,\n    className: \"product-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(MDBTableHead, {\n    className: \"font-weight-bold\" //color=\"mdb-color lighten-5\"\n    ,\n    color: \"elegant-color-dark\",\n    textWhite: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Product\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, cartRows))))));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/components/cart/Cart.js"],"names":["React","useState","TopNavigationaBar","useSelector","useDispatch","CartItem","MDBRow","MDBCard","MDBCardBody","MDBCardTitle","MDBTooltip","MDBTable","MDBTableBody","MDBTableHead","MDBInput","MDBBtn","MDBIcon","updateCart","Cart","props","columns","setcolumns","cart","state","shoppingCart","dispatch","newCart","setNewCart","removeOneFromCart","id","itemIndex","findIndex","cartItem","updatedCart","splice","console","log","cartCount","forEach","hasOwnProperty","cartArrayWithQuantities","key","currentCartItem","find","push","cartRows","map","marginTop","length","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TopNavigationaBar from \"../TopNavigationBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"./CartItem\";\n\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBTooltip,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBInput,\n  MDBBtn,\n  MDBIcon\n} from \"mdbreact\";\n\nimport { updateCart } from \"../../store/cart/actions\";\n\nconst Cart = props => {\n  const [columns, setcolumns] = useState({});\n  const cart = useSelector(state => state.shoppingCart.cart);\n  //const products = useSelector(state => state.products.all);\n  const dispatch = useDispatch();\n  const [newCart, setNewCart] = useState(cart);\n\n  //   const newCart = cart;\n\n  const removeOneFromCart = id => {\n    //   let updatedCart =\n    // console.log(\"cart before: \", cart);\n    // setNewCart(cart);\n    // console.log(\"new cart before findindex, after setting again: \", newCart);\n    let itemIndex = newCart.findIndex(cartItem => cartItem.id === id);\n    // console.log(\"new cart before: \", newCart);\n    // setNewCart(newCart.splice(parseInt(itemIndex), 1));\n    // console.log(\"new cart after: \", newCart);\n\n    let updatedCart = cart.splice(itemIndex, 1);\n\n    dispatch(updateCart(updatedCart));\n  };\n\n  console.log(\"CART CONTENTS: \", cart);\n\n  //Count number of items in cart to determine quantities\n  let cartCount = {};\n  cart.forEach(cartItem => {\n    if (cartCount.hasOwnProperty(cartItem.id)) {\n      cartCount[cartItem.id]++;\n    } else {\n      cartCount[cartItem.id] = 1;\n    }\n  });\n\n  //Create an array matching cart contents with quantities\n  let cartArrayWithQuantities = [];\n  for (const key in cartCount) {\n    let currentCartItem = cart.find(cartItem => cartItem.id == key);\n    currentCartItem[\"quantity\"] = cartCount[key];\n    cartArrayWithQuantities.push(currentCartItem);\n  }\n  console.log(\"cartArrayWithQuantities: \", cartArrayWithQuantities);\n\n  let cartRows = cartArrayWithQuantities.map(cartItem => (\n    <CartItem\n      product={cartItem}\n      key={cartItem.id}\n      removeOneFromCart={removeOneFromCart}\n    />\n  ));\n\n  return (\n    <div>\n      <TopNavigationaBar />\n      <MDBRow className=\"my-2\" center>\n        <MDBCard className=\"w-100\" style={{ marginTop: \"15px\" }}>\n          {cartRows.length === 0 ? (\n            <MDBCardBody>\n              <MDBCardTitle style={{ margin: \"auto\" }}>\n                <MDBIcon icon=\"shopping-cart\"></MDBIcon>&nbsp;&nbsp;You have\n                nothing in your cart.\n              </MDBCardTitle>\n            </MDBCardBody>\n          ) : (\n            <MDBCardBody>\n              <MDBTable hover className=\"product-table\">\n                <MDBTableHead\n                  className=\"font-weight-bold\"\n                  //color=\"mdb-color lighten-5\"\n                  color=\"elegant-color-dark\"\n                  textWhite\n                >\n                  <tr>\n                    <th></th>\n                    <th>Product</th>\n                    <th>Price</th>\n                    <th>Quantity</th>\n                    <th>Amount</th>\n                    <th></th>\n                  </tr>\n                </MDBTableHead>\n\n                <MDBTableBody>{cartRows}</MDBTableBody>\n              </MDBTable>\n            </MDBCardBody>\n          )}\n        </MDBCard>\n      </MDBRow>\n    </div>\n  );\n};\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}