{"ast":null,"code":"var _jsxFileName = \"/Users/george/Desktop/h2studiofrontend/src/components/cart/Cart.js\";\nimport React, { useState } from \"react\";\nimport TopNavigationaBar from \"../TopNavigationBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport { MDBRow, MDBCard, MDBCardBody, MDBCardTitle, MDBTooltip, MDBTable, MDBTableBody, MDBTableHead, MDBInput, MDBBtn, MDBIcon } from \"mdbreact\";\nimport { updateCart } from \"../../store/cart/actions\";\n\nconst Cart = props => {\n  const cart = useSelector(state => state.shoppingCart.cart);\n  const dispatch = useDispatch(); //Force a re-render. Used when state updates, but page does not re-render as intended.\n\n  const [update, setUpdate] = useState(0); //Function passed down to remove an item from cart, and update cart store-state.\n\n  const removeOneFromCart = id => {\n    let itemIndex = cart.findIndex(cartItem => cartItem.id === id);\n    let updatedCart = cart.filter((item, index) => {\n      return index !== itemIndex;\n    });\n    dispatch(updateCart(updatedCart));\n    setUpdate(update + 1);\n  }; //Function passed down to add an item to the cart, and update cart store-state.\n\n\n  const addOneToCart = item => {\n    console.log(\"item passed in: \", item);\n    let updatedCart = cart;\n    console.log(\"updated cart=cart: \", updatedCart);\n    updatedCart.push(item);\n    console.log(\"updatedCart after push: \", updatedCart);\n    dispatch(updateCart(updatedCart));\n    setUpdate(update + 1);\n  };\n\n  console.log(\"CART CONTENTS: \", cart); //Count number of items in cart to determine quantities\n\n  let cartCount = {};\n  cart.forEach(cartItem => {\n    if (cartCount.hasOwnProperty(cartItem.id)) {\n      cartCount[cartItem.id]++;\n    } else {\n      cartCount[cartItem.id] = 1;\n    }\n  }); //Create an array matching cart contents with quantities\n\n  let cartArrayWithQuantities = [];\n\n  for (const key in cartCount) {\n    let currentCartItem = cart.find(cartItem => cartItem.id == key);\n    currentCartItem[\"quantity\"] = cartCount[key];\n    cartArrayWithQuantities.push(currentCartItem);\n  } //Find the total price based on current cart items and quantities\n\n\n  let total = 0.0;\n  cartArrayWithQuantities.forEach(cartItem => {\n    console.log(\"cartItem.price * cartItem.quantity).toFixed(2): \", (cartItem.price * cartItem.quantity).toFixed(2)); // total += (cartItem.price * cartItem.quantity).toFixed(2);\n\n    let currentAmount = Number((cartItem.price * cartItem.quantity).toFixed(2));\n    total += Number(currentAmount.toFixed(2));\n  });\n  console.log(\"TOTAL: \", total);\n  console.log(\"cartArrayWithQuantities: \", cartArrayWithQuantities);\n  let cartRows = cartArrayWithQuantities.map(cartItem => React.createElement(CartItem, {\n    product: cartItem,\n    key: cartItem.id,\n    removeOneFromCart: removeOneFromCart,\n    addOneToCart: addOneToCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TopNavigationaBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    className: \"my-2\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(MDBCard, {\n    className: \"w-100\",\n    style: {\n      marginTop: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, cartRows.length === 0 ? React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(MDBCardTitle, {\n    style: {\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(MDBIcon, {\n    icon: \"shopping-cart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), \"\\xA0\\xA0You have nothing in your cart.\", React.createElement(MDBBtn, {\n    color: \"elegant\",\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Go to store \", React.createElement(MDBIcon, {\n    icon: \"angle-double-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })))) : React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(MDBTable, {\n    hover: true,\n    className: \"product-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(MDBTableHead, {\n    className: \"font-weight-bold\" //color=\"mdb-color lighten-5\"\n    ,\n    color: \"elegant-color-dark\",\n    textWhite: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Product\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, cartRows, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Total: $\", total.toFixed(2)))))))));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/components/cart/Cart.js"],"names":["React","useState","TopNavigationaBar","useSelector","useDispatch","CartItem","MDBRow","MDBCard","MDBCardBody","MDBCardTitle","MDBTooltip","MDBTable","MDBTableBody","MDBTableHead","MDBInput","MDBBtn","MDBIcon","updateCart","Cart","props","cart","state","shoppingCart","dispatch","update","setUpdate","removeOneFromCart","id","itemIndex","findIndex","cartItem","updatedCart","filter","item","index","addOneToCart","console","log","push","cartCount","forEach","hasOwnProperty","cartArrayWithQuantities","key","currentCartItem","find","total","price","quantity","toFixed","currentAmount","Number","cartRows","map","marginTop","length","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TopNavigationaBar from \"../TopNavigationBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"./CartItem\";\n\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBTooltip,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBInput,\n  MDBBtn,\n  MDBIcon\n} from \"mdbreact\";\n\nimport { updateCart } from \"../../store/cart/actions\";\n\nconst Cart = props => {\n  const cart = useSelector(state => state.shoppingCart.cart);\n  const dispatch = useDispatch();\n\n  //Force a re-render. Used when state updates, but page does not re-render as intended.\n  const [update, setUpdate] = useState(0);\n\n  //Function passed down to remove an item from cart, and update cart store-state.\n  const removeOneFromCart = id => {\n    let itemIndex = cart.findIndex(cartItem => cartItem.id === id);\n    let updatedCart = cart.filter((item, index) => {\n      return index !== itemIndex;\n    });\n\n    dispatch(updateCart(updatedCart));\n    setUpdate(update + 1);\n  };\n\n  //Function passed down to add an item to the cart, and update cart store-state.\n  const addOneToCart = item => {\n    console.log(\"item passed in: \", item);\n    let updatedCart = cart;\n    console.log(\"updated cart=cart: \", updatedCart);\n    updatedCart.push(item);\n    console.log(\"updatedCart after push: \", updatedCart);\n    dispatch(updateCart(updatedCart));\n    setUpdate(update + 1);\n  };\n\n  console.log(\"CART CONTENTS: \", cart);\n\n  //Count number of items in cart to determine quantities\n  let cartCount = {};\n  cart.forEach(cartItem => {\n    if (cartCount.hasOwnProperty(cartItem.id)) {\n      cartCount[cartItem.id]++;\n    } else {\n      cartCount[cartItem.id] = 1;\n    }\n  });\n\n  //Create an array matching cart contents with quantities\n  let cartArrayWithQuantities = [];\n  for (const key in cartCount) {\n    let currentCartItem = cart.find(cartItem => cartItem.id == key);\n    currentCartItem[\"quantity\"] = cartCount[key];\n    cartArrayWithQuantities.push(currentCartItem);\n  }\n\n  //Find the total price based on current cart items and quantities\n  let total = 0.0;\n  cartArrayWithQuantities.forEach(cartItem => {\n    console.log(\n      \"cartItem.price * cartItem.quantity).toFixed(2): \",\n      (cartItem.price * cartItem.quantity).toFixed(2)\n    );\n    // total += (cartItem.price * cartItem.quantity).toFixed(2);\n    let currentAmount = Number((cartItem.price * cartItem.quantity).toFixed(2));\n    total += Number(currentAmount.toFixed(2));\n  });\n  console.log(\"TOTAL: \", total);\n\n  console.log(\"cartArrayWithQuantities: \", cartArrayWithQuantities);\n\n  let cartRows = cartArrayWithQuantities.map(cartItem => (\n    <CartItem\n      product={cartItem}\n      key={cartItem.id}\n      removeOneFromCart={removeOneFromCart}\n      addOneToCart={addOneToCart}\n    />\n  ));\n\n  return (\n    <div>\n      <TopNavigationaBar />\n      <MDBRow className=\"my-2\" center>\n        <MDBCard className=\"w-100\" style={{ marginTop: \"15px\" }}>\n          {cartRows.length === 0 ? (\n            <MDBCardBody>\n              <MDBCardTitle style={{ margin: \"auto\" }}>\n                <MDBIcon icon=\"shopping-cart\"></MDBIcon>&nbsp;&nbsp;You have\n                nothing in your cart.\n                <MDBBtn color=\"elegant\" size=\"sm\">\n                  Go to store <MDBIcon icon=\"angle-double-right\" />\n                </MDBBtn>\n              </MDBCardTitle>\n            </MDBCardBody>\n          ) : (\n            <MDBCardBody>\n              <MDBTable hover className=\"product-table\">\n                <MDBTableHead\n                  className=\"font-weight-bold\"\n                  //color=\"mdb-color lighten-5\"\n                  color=\"elegant-color-dark\"\n                  textWhite\n                >\n                  <tr>\n                    <th></th>\n                    <th>Product</th>\n                    <th>Price</th>\n                    <th>Quantity</th>\n                    <th>Amount</th>\n                    <th></th>\n                  </tr>\n                </MDBTableHead>\n\n                <MDBTableBody>\n                  {cartRows}\n                  <tr>\n                    <td colSpan=\"5\">Total: ${total.toFixed(2)}</td>\n                  </tr>\n                </MDBTableBody>\n              </MDBTable>\n            </MDBCardBody>\n          )}\n        </MDBCard>\n      </MDBRow>\n    </div>\n  );\n};\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}