{"ast":null,"code":"import axios from \"axios\"; // import * as types from \"./constants\";\n\nimport { FETCH_ALL_TRANSACTIONS_PENDING, FETCH_ALL_TRANSACTIONS_SUCCESS, FETCH_ALL_TRANSACTIONS_FAILED, ADD_NEW_TRANSACTION_SUCCESS, ADD_NEW_TRANSACTION_PENDING, ADD_NEW_TRANSACTION_FAILED, UPDATE_TRANSACTION_PENDING, UPDATE_TRANSACTION_FAILED, UPDATE_TRANSACTION_SUCCESS, DELETE_TRANSACTION_FAILED, DELETE_TRANSACTION_PENDING, DELETE_TRANSACTION_SUCCESS, FETCH_TRANSACTION_PENDING, FETCH_TRANSACTION_SUCCESS, FETCH_TRANSACTION_FAILED } from \"./constants\";\nexport const fetchAllTransactions = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_TRANSACTIONS_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/transactions`);\n    dispatch({\n      type: FETCH_ALL_TRANSACTIONS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_TRANSACTIONS_FAILED,\n      payload: err\n    });\n  }\n};\nexport const fetchTransaction = id => async dispatch => {\n  dispatch({\n    type: FETCH_TRANSACTION_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/transactions/${id}`);\n    dispatch({\n      type: FETCH_TRANSACTION_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_TRANSACTION_FAILED,\n      payload: err\n    });\n  }\n}; // Add new PRODUCT\n// export const addNewPRODUCT = newPRODUCT => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_PRODUCT_PENDING\n//   });\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/PRODUCTs`,\n//       newPRODUCT\n//     );\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// // Delete a PRODUCT\n// export const deletePRODUCT = id => async dispatch => {\n//   dispatch({\n//     type: DELETE_PRODUCT_PENDING\n//   });\n//   try {\n//     let response = await axios.delete(`http://localhost:8000/PRODUCTs/${id}`);\n//     dispatch({\n//       type: DELETE_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: DELETE_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// // Update PRODUCT\n// export const updatePRODUCT = (updatePRODUCT, id) => async dispatch => {\n//   dispatch({\n//     type: UPDATE_PRODUCT_PENDING\n//   });\n//   try {\n//     let response = await axios.patch(\n//       `http://localhost:8000/PRODUCTs/${id}`,\n//       updatePRODUCT\n//     );\n//     dispatch({\n//       type: UPDATE_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: UPDATE_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/store/transactions/actions.js"],"names":["axios","FETCH_ALL_TRANSACTIONS_PENDING","FETCH_ALL_TRANSACTIONS_SUCCESS","FETCH_ALL_TRANSACTIONS_FAILED","ADD_NEW_TRANSACTION_SUCCESS","ADD_NEW_TRANSACTION_PENDING","ADD_NEW_TRANSACTION_FAILED","UPDATE_TRANSACTION_PENDING","UPDATE_TRANSACTION_FAILED","UPDATE_TRANSACTION_SUCCESS","DELETE_TRANSACTION_FAILED","DELETE_TRANSACTION_PENDING","DELETE_TRANSACTION_SUCCESS","FETCH_TRANSACTION_PENDING","FETCH_TRANSACTION_SUCCESS","FETCH_TRANSACTION_FAILED","fetchAllTransactions","dispatch","type","response","get","payload","data","err","fetchTransaction","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,8BADF,EAEEC,8BAFF,EAGEC,6BAHF,EAIEC,2BAJF,EAKEC,2BALF,EAMEC,0BANF,EAOEC,0BAPF,EAQEC,yBARF,EASEC,0BATF,EAUEC,yBAVF,EAWEC,0BAXF,EAYEC,0BAZF,EAaEC,yBAbF,EAcEC,yBAdF,EAeEC,wBAfF,QAgBO,aAhBP;AAkBA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC1DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEjB;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIkB,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,oCAAX,CAArB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,8BADC;AAEPmB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,6BADC;AAEPkB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMC,gBAAgB,GAAGC,EAAE,IAAI,MAAMR,QAAN,IAAkB;AACtDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIM,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,sCAAqCK,EAAG,EAAnD,CAArB;AACAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,yBADC;AAEPO,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,wBADC;AAEPM,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\n// import * as types from \"./constants\";\nimport {\n  FETCH_ALL_TRANSACTIONS_PENDING,\n  FETCH_ALL_TRANSACTIONS_SUCCESS,\n  FETCH_ALL_TRANSACTIONS_FAILED,\n  ADD_NEW_TRANSACTION_SUCCESS,\n  ADD_NEW_TRANSACTION_PENDING,\n  ADD_NEW_TRANSACTION_FAILED,\n  UPDATE_TRANSACTION_PENDING,\n  UPDATE_TRANSACTION_FAILED,\n  UPDATE_TRANSACTION_SUCCESS,\n  DELETE_TRANSACTION_FAILED,\n  DELETE_TRANSACTION_PENDING,\n  DELETE_TRANSACTION_SUCCESS,\n  FETCH_TRANSACTION_PENDING,\n  FETCH_TRANSACTION_SUCCESS,\n  FETCH_TRANSACTION_FAILED\n} from \"./constants\";\n\nexport const fetchAllTransactions = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_TRANSACTIONS_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/transactions`);\n    dispatch({\n      type: FETCH_ALL_TRANSACTIONS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_TRANSACTIONS_FAILED,\n      payload: err\n    });\n  }\n};\n\nexport const fetchTransaction = id => async dispatch => {\n  dispatch({\n    type: FETCH_TRANSACTION_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/transactions/${id}`);\n    dispatch({\n      type: FETCH_TRANSACTION_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_TRANSACTION_FAILED,\n      payload: err\n    });\n  }\n};\n\n// Add new PRODUCT\n// export const addNewPRODUCT = newPRODUCT => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_PRODUCT_PENDING\n//   });\n\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/PRODUCTs`,\n//       newPRODUCT\n//     );\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// // Delete a PRODUCT\n// export const deletePRODUCT = id => async dispatch => {\n//   dispatch({\n//     type: DELETE_PRODUCT_PENDING\n//   });\n//   try {\n//     let response = await axios.delete(`http://localhost:8000/PRODUCTs/${id}`);\n//     dispatch({\n//       type: DELETE_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: DELETE_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// // Update PRODUCT\n// export const updatePRODUCT = (updatePRODUCT, id) => async dispatch => {\n//   dispatch({\n//     type: UPDATE_PRODUCT_PENDING\n//   });\n\n//   try {\n//     let response = await axios.patch(\n//       `http://localhost:8000/PRODUCTs/${id}`,\n//       updatePRODUCT\n//     );\n//     dispatch({\n//       type: UPDATE_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: UPDATE_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}