{"ast":null,"code":"import axios from \"axios\"; // import * as types from \"./constants\";\n\nimport { FETCH_ALL_PRODUCTS_PENDING, FETCH_ALL_PRODUCTS_SUCCESS, FETCH_ALL_PRODUCTS_FAILED, ADD_NEW_PRODUCT_SUCCESS, ADD_NEW_PRODUCT_PENDING, ADD_NEW_PRODUCT_FAILED, UPDATE_PRODUCT_PENDING, UPDATE_PRODUCT_FAILED, UPDATE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAILED, DELETE_PRODUCT_PENDING, DELETE_PRODUCT_SUCCESS, FETCH_PRODUCT_PENDING, FETCH_PRODUCT_SUCCESS, FETCH_PRODUCT_FAILED } from \"./constants\";\nexport const fetchAllProducts = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_PRODUCTS_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/products`);\n    dispatch({\n      type: FETCH_ALL_PRODUCTS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_PRODUCTS_FAILED,\n      payload: err\n    });\n  }\n};\nexport const fetchProduct = id => async dispatch => {\n  dispatch({\n    type: FETCH_PRODUCT_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/products/${id}`);\n    dispatch({\n      type: FETCH_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PRODUCT_FAILED,\n      payload: err\n    });\n  }\n}; // Add new PRODUCT\n// export const addNewPRODUCT = newPRODUCT => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_PRODUCT_PENDING\n//   });\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/PRODUCTs`,\n//       newPRODUCT\n//     );\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// Delete a PRODUCT\n\nexport const deleteProduct = id => async dispatch => {\n  dispatch({\n    type: DELETE_PRODUCT_PENDING\n  });\n\n  try {\n    let response = await axios.delete(`http://localhost:8080/products/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_PRODUCT_FAILED,\n      payload: err\n    });\n  }\n}; // Update PRODUCT\n\nexport const updateProduct = updatedProduct => async dispatch => {\n  dispatch({\n    type: UPDATE_PRODUCT_PENDING\n  });\n\n  try {\n    let response = await axios.patch(`http://localhost:8080/products`, updatedProduct);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAILED,\n      payload: err\n    });\n  }\n};","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/store/products/actions.js"],"names":["axios","FETCH_ALL_PRODUCTS_PENDING","FETCH_ALL_PRODUCTS_SUCCESS","FETCH_ALL_PRODUCTS_FAILED","ADD_NEW_PRODUCT_SUCCESS","ADD_NEW_PRODUCT_PENDING","ADD_NEW_PRODUCT_FAILED","UPDATE_PRODUCT_PENDING","UPDATE_PRODUCT_FAILED","UPDATE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILED","DELETE_PRODUCT_PENDING","DELETE_PRODUCT_SUCCESS","FETCH_PRODUCT_PENDING","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAILED","fetchAllProducts","dispatch","type","response","get","payload","data","err","fetchProduct","id","deleteProduct","delete","updateProduct","updatedProduct","patch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// import * as types from \"./constants\";\nimport {\n  FETCH_ALL_PRODUCTS_PENDING,\n  FETCH_ALL_PRODUCTS_SUCCESS,\n  FETCH_ALL_PRODUCTS_FAILED,\n  ADD_NEW_PRODUCT_SUCCESS,\n  ADD_NEW_PRODUCT_PENDING,\n  ADD_NEW_PRODUCT_FAILED,\n  UPDATE_PRODUCT_PENDING,\n  UPDATE_PRODUCT_FAILED,\n  UPDATE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAILED,\n  DELETE_PRODUCT_PENDING,\n  DELETE_PRODUCT_SUCCESS,\n  FETCH_PRODUCT_PENDING,\n  FETCH_PRODUCT_SUCCESS,\n  FETCH_PRODUCT_FAILED\n} from \"./constants\";\n\nexport const fetchAllProducts = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_PRODUCTS_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/products`);\n    dispatch({\n      type: FETCH_ALL_PRODUCTS_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_PRODUCTS_FAILED,\n      payload: err\n    });\n  }\n};\n\nexport const fetchProduct = id => async dispatch => {\n  dispatch({\n    type: FETCH_PRODUCT_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/products/${id}`);\n    dispatch({\n      type: FETCH_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_PRODUCT_FAILED,\n      payload: err\n    });\n  }\n};\n\n// Add new PRODUCT\n// export const addNewPRODUCT = newPRODUCT => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_PRODUCT_PENDING\n//   });\n\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/PRODUCTs`,\n//       newPRODUCT\n//     );\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_PRODUCT_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// Delete a PRODUCT\nexport const deleteProduct = id => async dispatch => {\n  dispatch({\n    type: DELETE_PRODUCT_PENDING\n  });\n  try {\n    let response = await axios.delete(`http://localhost:8080/products/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: DELETE_PRODUCT_FAILED,\n      payload: err\n    });\n  }\n};\n\n// Update PRODUCT\nexport const updateProduct = updatedProduct => async dispatch => {\n  dispatch({\n    type: UPDATE_PRODUCT_PENDING\n  });\n\n  try {\n    let response = await axios.patch(\n      `http://localhost:8080/products`,\n      updatedProduct\n    );\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAILED,\n      payload: err\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}