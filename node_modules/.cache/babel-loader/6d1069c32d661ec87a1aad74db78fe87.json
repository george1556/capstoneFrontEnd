{"ast":null,"code":"import axios from \"axios\"; // import * as types from \"./constants\";\n\nimport { FETCH_ALL_IMAGES_PENDING, FETCH_ALL_IMAGES_SUCCESS, FETCH_ALL_IMAGES_FAILED, ADD_NEW_IMAGE_SUCCESS, ADD_NEW_IMAGE_PENDING, ADD_NEW_IMAGE_FAILED, UPDATE_IMAGE_PENDING, UPDATE_IMAGE_FAILED, UPDATE_IMAGE_SUCCESS, DELETE_IMAGE_FAILED, DELETE_IMAGE_PENDING, DELETE_IMAGE_SUCCESS, FETCH_IMAGE_PENDING, FETCH_IMAGE_SUCCESS, FETCH_IMAGE_FAILED } from \"./constants\";\nexport const fetchAllImages = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_IMAGES_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/images`);\n    dispatch({\n      type: FETCH_ALL_IMAGES_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_IMAGES_FAILED,\n      payload: err\n    });\n  }\n};\nexport const fetchImage = id => async dispatch => {\n  dispatch({\n    type: FETCH_IMAGE_PENDING\n  });\n\n  try {\n    let response = await axios.get(`http://localhost:8080/images/${id}`);\n    dispatch({\n      type: FETCH_IMAGE_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_IMAGE_FAILED,\n      payload: err\n    });\n  }\n}; // Add new IMAGE\n// export const addNewIMAGE = newIMAGE => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_IMAGE_PENDING\n//   });\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/IMAGEs`,\n//       newIMAGE\n//     );\n//     dispatch({\n//       type: ADD_NEW_IMAGE_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_IMAGE_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// // Delete a IMAGE\n// export const deleteIMAGE = id => async dispatch => {\n//   dispatch({\n//     type: DELETE_IMAGE_PENDING\n//   });\n//   try {\n//     let response = await axios.delete(`http://localhost:8000/IMAGEs/${id}`);\n//     dispatch({\n//       type: DELETE_IMAGE_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: DELETE_IMAGE_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n// // Update IMAGE\n// export const updateIMAGE = (updateIMAGE, id) => async dispatch => {\n//   dispatch({\n//     type: UPDATE_IMAGE_PENDING\n//   });\n//   try {\n//     let response = await axios.patch(\n//       `http://localhost:8000/IMAGEs/${id}`,\n//       updateIMAGE\n//     );\n//     dispatch({\n//       type: UPDATE_IMAGE_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: UPDATE_IMAGE_FAILED,\n//       payload: err\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/store/images/actions.js"],"names":["axios","FETCH_ALL_IMAGES_PENDING","FETCH_ALL_IMAGES_SUCCESS","FETCH_ALL_IMAGES_FAILED","ADD_NEW_IMAGE_SUCCESS","ADD_NEW_IMAGE_PENDING","ADD_NEW_IMAGE_FAILED","UPDATE_IMAGE_PENDING","UPDATE_IMAGE_FAILED","UPDATE_IMAGE_SUCCESS","DELETE_IMAGE_FAILED","DELETE_IMAGE_PENDING","DELETE_IMAGE_SUCCESS","FETCH_IMAGE_PENDING","FETCH_IMAGE_SUCCESS","FETCH_IMAGE_FAILED","fetchAllImages","dispatch","type","response","get","payload","data","err","fetchImage","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,wBADF,EAEEC,wBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,oBANF,EAOEC,oBAPF,EAQEC,mBARF,EASEC,oBATF,EAUEC,mBAVF,EAWEC,oBAXF,EAYEC,oBAZF,EAaEC,mBAbF,EAcEC,mBAdF,EAeEC,kBAfF,QAgBO,aAhBP;AAkBA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACpDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEjB;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIkB,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,8BAAX,CAArB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEhB,wBADC;AAEPmB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,uBADC;AAEPkB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMC,UAAU,GAAGC,EAAE,IAAI,MAAMR,QAAN,IAAkB;AAChDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL;AADC,GAAD,CAAR;;AAGA,MAAI;AACF,QAAIM,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,gCAA+BK,EAAG,EAA7C,CAArB;AACAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,mBADC;AAEPO,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,kBADC;AAEPM,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\n// import * as types from \"./constants\";\nimport {\n  FETCH_ALL_IMAGES_PENDING,\n  FETCH_ALL_IMAGES_SUCCESS,\n  FETCH_ALL_IMAGES_FAILED,\n  ADD_NEW_IMAGE_SUCCESS,\n  ADD_NEW_IMAGE_PENDING,\n  ADD_NEW_IMAGE_FAILED,\n  UPDATE_IMAGE_PENDING,\n  UPDATE_IMAGE_FAILED,\n  UPDATE_IMAGE_SUCCESS,\n  DELETE_IMAGE_FAILED,\n  DELETE_IMAGE_PENDING,\n  DELETE_IMAGE_SUCCESS,\n  FETCH_IMAGE_PENDING,\n  FETCH_IMAGE_SUCCESS,\n  FETCH_IMAGE_FAILED\n} from \"./constants\";\n\nexport const fetchAllImages = () => async dispatch => {\n  dispatch({\n    type: FETCH_ALL_IMAGES_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/images`);\n    dispatch({\n      type: FETCH_ALL_IMAGES_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_ALL_IMAGES_FAILED,\n      payload: err\n    });\n  }\n};\n\nexport const fetchImage = id => async dispatch => {\n  dispatch({\n    type: FETCH_IMAGE_PENDING\n  });\n  try {\n    let response = await axios.get(`http://localhost:8080/images/${id}`);\n    dispatch({\n      type: FETCH_IMAGE_SUCCESS,\n      payload: response.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FETCH_IMAGE_FAILED,\n      payload: err\n    });\n  }\n};\n\n// Add new IMAGE\n// export const addNewIMAGE = newIMAGE => async dispatch => {\n//   dispatch({\n//     type: ADD_NEW_IMAGE_PENDING\n//   });\n\n//   try {\n//     let response = await axios.post(\n//       `http://localhost:8000/IMAGEs`,\n//       newIMAGE\n//     );\n//     dispatch({\n//       type: ADD_NEW_IMAGE_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: ADD_NEW_IMAGE_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// // Delete a IMAGE\n// export const deleteIMAGE = id => async dispatch => {\n//   dispatch({\n//     type: DELETE_IMAGE_PENDING\n//   });\n//   try {\n//     let response = await axios.delete(`http://localhost:8000/IMAGEs/${id}`);\n//     dispatch({\n//       type: DELETE_IMAGE_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: DELETE_IMAGE_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n\n// // Update IMAGE\n// export const updateIMAGE = (updateIMAGE, id) => async dispatch => {\n//   dispatch({\n//     type: UPDATE_IMAGE_PENDING\n//   });\n\n//   try {\n//     let response = await axios.patch(\n//       `http://localhost:8000/IMAGEs/${id}`,\n//       updateIMAGE\n//     );\n//     dispatch({\n//       type: UPDATE_IMAGE_SUCCESS,\n//       payload: response.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: UPDATE_IMAGE_FAILED,\n//       payload: err\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}