{"ast":null,"code":"var _jsxFileName = \"/Users/george/Desktop/h2studiofrontend/src/components/cart/Cart.js\";\n// import React, { Component } from \"react\";\n// import {\n//   MDBRow,\n//   MDBCard,\n//   MDBCardBody,\n//   MDBTooltip,\n//   MDBTable,\n//   MDBTableBody,\n//   MDBTableHead,\n//   MDBInput,\n//   MDBBtn\n// } from \"mdbreact\";\n// import TopNavigationaBar from \"../TopNavigationBar\";\n// class Cart extends Component {\n//   state = {\n//     data: [\n//       {\n//         src:\n//           \"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/13.jpg\",\n//         title: \"iPhone\",\n//         subTitle: \"Apple\",\n//         color: \"White\",\n//         price: \"800\",\n//         qty: \"2\"\n//       },\n//       {\n//         src:\n//           \"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/6.jpg\",\n//         title: \"Headphones\",\n//         subTitle: \"Sony\",\n//         color: \"Red\",\n//         price: \"200\",\n//         qty: \"2\"\n//       },\n//       {\n//         src:\n//           \"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/1.jpg\",\n//         title: \"iPad Pro\",\n//         subTitle: \"Apple\",\n//         color: \"Gold\",\n//         price: \"600\",\n//         qty: \"1\"\n//       }\n//     ],\n//     columns: [\n//       {\n//         label: \"\",\n//         field: \"img\"\n//       },\n//       {\n//         label: <strong>Product</strong>,\n//         field: \"product\"\n//       },\n//       {\n//         label: <strong>Color</strong>,\n//         field: \"color\"\n//       },\n//       {\n//         label: <strong>Price</strong>,\n//         field: \"price\"\n//       },\n//       {\n//         label: <strong>QTY</strong>,\n//         field: \"qty\"\n//       },\n//       {\n//         label: <strong>Amount</strong>,\n//         field: \"amount\"\n//       },\n//       {\n//         label: \"\",\n//         field: \"button\"\n//       }\n//     ]\n//   };\n//   render() {\n//     const rows = [];\n//     const { columns, data } = this.state;\n//     data.map(row => {\n//       return rows.push({\n//         img: <img src={row.src} alt=\"\" className=\"img-fluid z-depth-0\" />,\n//         product: [\n//           <h5 className=\"mt-3\" key={new Date().getDate + 1}>\n//             <strong>{row.title}</strong>\n//           </h5>,\n//           <p key={new Date().getDate} className=\"text-muted\">\n//             {row.subTitle}\n//           </p>\n//         ],\n//         color: row.color,\n//         price: `$${row.price}`,\n//         qty: (\n//           <MDBInput\n//             type=\"number\"\n//             default={row.qty}\n//             className=\"form-control\"\n//             style={{ width: \"100px\" }}\n//           />\n//         ),\n//         amount: <strong>${row.qty * row.price}</strong>,\n//         button: (\n//           <MDBTooltip placement=\"top\">\n//             <MDBBtn color=\"primary\" size=\"sm\">\n//               X\n//             </MDBBtn>\n//             <div>Remove item</div>\n//           </MDBTooltip>\n//         )\n//       });\n//     });\n//     return (\n//       <div>\n//         <TopNavigationaBar />\n//         <MDBRow className=\"my-2\" center>\n//           <MDBCard className=\"w-100\" style={{ marginTop: \"15px\" }}>\n//             <MDBCardBody>\n//               <MDBTable hover className=\"product-table\">\n//                 <MDBTableHead\n//                   className=\"font-weight-bold\"\n//                   color=\"mdb-color lighten-5\"\n//                   columns={columns}\n//                 />\n//                 <MDBTableBody rows={rows} />\n//               </MDBTable>\n//             </MDBCardBody>\n//           </MDBCard>\n//         </MDBRow>\n//       </div>\n//     );\n//   }\n// }\n// export default Cart;\nimport React, { useState } from \"react\";\nimport TopNavigationaBar from \"../TopNavigationBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport { MDBRow, MDBCard, MDBCardBody, MDBTooltip, MDBTable, MDBTableBody, MDBTableHead, MDBInput, MDBBtn } from \"mdbreact\";\n\nconst Cart = props => {\n  const [columns, setcolumns] = useState({});\n  const cart = useSelector(state => state.shoppingCart.cart); //const products = useSelector(state => state.products.all);\n\n  const dispatch = useDispatch();\n  console.log(\"CART CONTENTS: \", cart); //Count number of items in cart to determine quantities\n\n  let cartCount = {};\n  cart.forEach(cartItem => {\n    if (cartCount.hasOwnProperty(cartItem.id)) {\n      cartCount[cartItem.id]++;\n    } else {\n      cartCount[cartItem.id] = 1;\n    }\n  }); //Create an array matching cart contents with quantities\n\n  let cartArrayWithQuantities = [];\n\n  for (const key in cartCount) {\n    let currentCartItem = cart.find(cartItem => cartItem.id == key);\n    currentCartItem[\"quantity\"] = cartCount[key];\n    cartArrayWithQuantities.push(currentCartItem);\n  }\n\n  console.log(\"cartArrayWithQuantities: \", cartArrayWithQuantities);\n  let cartRows = cartArrayWithQuantities.map(cartItem => React.createElement(CartItem, {\n    product: cartItem,\n    key: cartItem.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }));\n\n  if (cartRows.length === 0) {\n    cartRows.push(React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\\"You have nothing in your cart.\\\"\")));\n  } //   let cartWithQuantities = [];\n  //   let cartCompare = [];\n  //   cart.forEach(cartItem => {\n  //       let count = 0;\n  //       for (let i = 0; i < cartWithQuantities.length; i++) {\n  //           if(cartWithQuantities[i].id === cartItem.id){\n  //           }\n  //       }\n  //   });\n  //find cart duplicates\n  //   const filterDuplicates = arr => {\n  //     let result = [];\n  //     arr.forEach(function(cartItem, index) {\n  //       if (arr.indexOf(cartItem, index + 1) > -1) {\n  //         if (result.indexOf(cartItem) === -1) {\n  //           result.push(cartItem);\n  //         }\n  //       }\n  //     });\n  //     return result;\n  //   };\n  //   console.log(\"FILTERDUPLICATES TEST: \", filterDuplicates(cart));\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(TopNavigationaBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(MDBRow, {\n    className: \"my-2\",\n    center: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(MDBCard, {\n    className: \"w-100\",\n    style: {\n      marginTop: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(MDBCardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(MDBTable, {\n    hover: true,\n    className: \"product-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(MDBTableHead, {\n    className: \"font-weight-bold\" //color=\"mdb-color lighten-5\"\n    ,\n    color: \"elegant-color-dark\",\n    textWhite: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Product\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }))), React.createElement(MDBTableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, cartRows, cartRows.length === 0 ? React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"You have nothing in your cart.\")) : \"\"))))));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/components/cart/Cart.js"],"names":["React","useState","TopNavigationaBar","useSelector","useDispatch","CartItem","MDBRow","MDBCard","MDBCardBody","MDBTooltip","MDBTable","MDBTableBody","MDBTableHead","MDBInput","MDBBtn","Cart","props","columns","setcolumns","cart","state","shoppingCart","dispatch","console","log","cartCount","forEach","cartItem","hasOwnProperty","id","cartArrayWithQuantities","key","currentCartItem","find","push","cartRows","map","length","marginTop"],"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","sourcesContent":["// import React, { Component } from \"react\";\n// import {\n//   MDBRow,\n//   MDBCard,\n//   MDBCardBody,\n//   MDBTooltip,\n//   MDBTable,\n//   MDBTableBody,\n//   MDBTableHead,\n//   MDBInput,\n//   MDBBtn\n// } from \"mdbreact\";\n\n// import TopNavigationaBar from \"../TopNavigationBar\";\n\n// class Cart extends Component {\n//   state = {\n//     data: [\n//       {\n//         src:\n//           \"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/13.jpg\",\n//         title: \"iPhone\",\n//         subTitle: \"Apple\",\n//         color: \"White\",\n//         price: \"800\",\n//         qty: \"2\"\n//       },\n//       {\n//         src:\n//           \"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/6.jpg\",\n//         title: \"Headphones\",\n//         subTitle: \"Sony\",\n//         color: \"Red\",\n//         price: \"200\",\n//         qty: \"2\"\n//       },\n//       {\n//         src:\n//           \"https://mdbootstrap.com/img/Photos/Horizontal/E-commerce/Products/1.jpg\",\n//         title: \"iPad Pro\",\n//         subTitle: \"Apple\",\n//         color: \"Gold\",\n//         price: \"600\",\n//         qty: \"1\"\n//       }\n//     ],\n//     columns: [\n//       {\n//         label: \"\",\n//         field: \"img\"\n//       },\n//       {\n//         label: <strong>Product</strong>,\n//         field: \"product\"\n//       },\n//       {\n//         label: <strong>Color</strong>,\n//         field: \"color\"\n//       },\n//       {\n//         label: <strong>Price</strong>,\n//         field: \"price\"\n//       },\n//       {\n//         label: <strong>QTY</strong>,\n//         field: \"qty\"\n//       },\n//       {\n//         label: <strong>Amount</strong>,\n//         field: \"amount\"\n//       },\n//       {\n//         label: \"\",\n//         field: \"button\"\n//       }\n//     ]\n//   };\n\n//   render() {\n//     const rows = [];\n//     const { columns, data } = this.state;\n\n//     data.map(row => {\n//       return rows.push({\n//         img: <img src={row.src} alt=\"\" className=\"img-fluid z-depth-0\" />,\n//         product: [\n//           <h5 className=\"mt-3\" key={new Date().getDate + 1}>\n//             <strong>{row.title}</strong>\n//           </h5>,\n//           <p key={new Date().getDate} className=\"text-muted\">\n//             {row.subTitle}\n//           </p>\n//         ],\n//         color: row.color,\n//         price: `$${row.price}`,\n//         qty: (\n//           <MDBInput\n//             type=\"number\"\n//             default={row.qty}\n//             className=\"form-control\"\n//             style={{ width: \"100px\" }}\n//           />\n//         ),\n//         amount: <strong>${row.qty * row.price}</strong>,\n//         button: (\n//           <MDBTooltip placement=\"top\">\n//             <MDBBtn color=\"primary\" size=\"sm\">\n//               X\n//             </MDBBtn>\n//             <div>Remove item</div>\n//           </MDBTooltip>\n//         )\n//       });\n//     });\n\n//     return (\n//       <div>\n//         <TopNavigationaBar />\n//         <MDBRow className=\"my-2\" center>\n//           <MDBCard className=\"w-100\" style={{ marginTop: \"15px\" }}>\n//             <MDBCardBody>\n//               <MDBTable hover className=\"product-table\">\n//                 <MDBTableHead\n//                   className=\"font-weight-bold\"\n//                   color=\"mdb-color lighten-5\"\n//                   columns={columns}\n//                 />\n\n//                 <MDBTableBody rows={rows} />\n//               </MDBTable>\n//             </MDBCardBody>\n//           </MDBCard>\n//         </MDBRow>\n//       </div>\n//     );\n//   }\n// }\n// export default Cart;\n\nimport React, { useState } from \"react\";\nimport TopNavigationaBar from \"../TopNavigationBar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"./CartItem\";\n\nimport {\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBTooltip,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBInput,\n  MDBBtn\n} from \"mdbreact\";\n\nconst Cart = props => {\n  const [columns, setcolumns] = useState({});\n  const cart = useSelector(state => state.shoppingCart.cart);\n  //const products = useSelector(state => state.products.all);\n  const dispatch = useDispatch();\n\n  console.log(\"CART CONTENTS: \", cart);\n\n  //Count number of items in cart to determine quantities\n  let cartCount = {};\n  cart.forEach(cartItem => {\n    if (cartCount.hasOwnProperty(cartItem.id)) {\n      cartCount[cartItem.id]++;\n    } else {\n      cartCount[cartItem.id] = 1;\n    }\n  });\n\n  //Create an array matching cart contents with quantities\n  let cartArrayWithQuantities = [];\n  for (const key in cartCount) {\n    let currentCartItem = cart.find(cartItem => cartItem.id == key);\n    currentCartItem[\"quantity\"] = cartCount[key];\n    cartArrayWithQuantities.push(currentCartItem);\n  }\n  console.log(\"cartArrayWithQuantities: \", cartArrayWithQuantities);\n\n  let cartRows = cartArrayWithQuantities.map(cartItem => (\n    <CartItem product={cartItem} key={cartItem.id} />\n  ));\n\n  if (cartRows.length === 0) {\n    cartRows.push(\n      <tr>\n        <td>\"You have nothing in your cart.\"</td>\n      </tr>\n    );\n  }\n\n  //   let cartWithQuantities = [];\n\n  //   let cartCompare = [];\n  //   cart.forEach(cartItem => {\n  //       let count = 0;\n  //       for (let i = 0; i < cartWithQuantities.length; i++) {\n  //           if(cartWithQuantities[i].id === cartItem.id){\n\n  //           }\n\n  //       }\n  //   });\n\n  //find cart duplicates\n\n  //   const filterDuplicates = arr => {\n  //     let result = [];\n\n  //     arr.forEach(function(cartItem, index) {\n  //       if (arr.indexOf(cartItem, index + 1) > -1) {\n  //         if (result.indexOf(cartItem) === -1) {\n  //           result.push(cartItem);\n  //         }\n  //       }\n  //     });\n\n  //     return result;\n  //   };\n\n  //   console.log(\"FILTERDUPLICATES TEST: \", filterDuplicates(cart));\n\n  return (\n    <div>\n      <TopNavigationaBar />\n      <MDBRow className=\"my-2\" center>\n        <MDBCard className=\"w-100\" style={{ marginTop: \"15px\" }}>\n          <MDBCardBody>\n            <MDBTable hover className=\"product-table\">\n              <MDBTableHead\n                className=\"font-weight-bold\"\n                //color=\"mdb-color lighten-5\"\n                color=\"elegant-color-dark\"\n                textWhite\n              >\n                <tr>\n                  <th></th>\n                  <th>Product</th>\n                  <th>Price</th>\n                  <th>Quantity</th>\n                  <th>Amount</th>\n                  <th></th>\n                </tr>\n              </MDBTableHead>\n\n              <MDBTableBody>\n                {cartRows}\n\n                {cartRows.length === 0 ? (\n                  <tr>\n                    <td>You have nothing in your cart.</td>\n                  </tr>\n                ) : (\n                  \"\"\n                )}\n              </MDBTableBody>\n            </MDBTable>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBRow>\n    </div>\n  );\n};\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}