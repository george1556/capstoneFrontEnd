{"ast":null,"code":"import { FETCH_ALL_USERS_PENDING, FETCH_ALL_USERS_SUCCESS, FETCH_ALL_USERS_FAILED, ADD_NEW_USER_PENDING, ADD_NEW_USER_SUCCESS, ADD_NEW_USER_FAILED, DELETE_USER_PENDING, DELETE_USER_SUCCESS, DELETE_USER_FAILED, UPDATE_USER_PENDING, UPDATE_USER_FAILED, UPDATE_USER_SUCCESS, FETCH_USER_FAILED, FETCH_USER_SUCCESS, FETCH_USER_PENDING } from \"./constants\"; //Using a default logged in user ID: 1, until authentication and login properly owrks.\n\nconst initialState = {\n  all: [],\n  err: {} // loggedInUser: 1\n\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_USERS_PENDING:\n    case ADD_NEW_USER_PENDING:\n    case DELETE_USER_PENDING:\n    case UPDATE_USER_PENDING:\n    case FETCH_USER_PENDING:\n      return state;\n\n    case FETCH_ALL_USERS_SUCCESS:\n    case FETCH_USER_SUCCESS:\n      // case UPDATE_USER_SUCCESS:\n      return { ...state,\n        all: action.payload\n      };\n\n    case ADD_NEW_USER_SUCCESS:\n      return { ...state,\n        all: [...state.all, action.payload]\n      };\n\n    case UPDATE_USER_SUCCESS:\n      return { ...state,\n        all: [...state.all.filter(USER => USER.id !== action.payload.id), action.payload]\n      };\n\n    case DELETE_USER_SUCCESS:\n      return { ...state,\n        all: state.all.filter(USER => USER.id !== action.payload.id)\n      };\n\n    case FETCH_ALL_USERS_FAILED:\n    case ADD_NEW_USER_FAILED:\n    case DELETE_USER_FAILED:\n    case UPDATE_USER_FAILED:\n    case FETCH_USER_FAILED:\n      return { ...state,\n        err: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/george/Desktop/h2studiofrontend/src/store/users/reducer.js"],"names":["FETCH_ALL_USERS_PENDING","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_FAILED","ADD_NEW_USER_PENDING","ADD_NEW_USER_SUCCESS","ADD_NEW_USER_FAILED","DELETE_USER_PENDING","DELETE_USER_SUCCESS","DELETE_USER_FAILED","UPDATE_USER_PENDING","UPDATE_USER_FAILED","UPDATE_USER_SUCCESS","FETCH_USER_FAILED","FETCH_USER_SUCCESS","FETCH_USER_PENDING","initialState","all","err","state","action","type","payload","filter","USER","id"],"mappings":"AAAA,SACEA,uBADF,EAEEC,uBAFF,EAGEC,sBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,kBATF,EAUEC,mBAVF,EAWEC,kBAXF,EAYEC,mBAZF,EAaEC,iBAbF,EAcEC,kBAdF,EAeEC,kBAfF,QAgBO,aAhBP,C,CAkBA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE,EADc;AAEnBC,EAAAA,GAAG,EAAE,EAFc,CAGnB;;AAHmB,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,uBAAL;AACA,SAAKG,oBAAL;AACA,SAAKG,mBAAL;AACA,SAAKG,mBAAL;AACA,SAAKK,kBAAL;AACE,aAAOI,KAAP;;AACF,SAAKjB,uBAAL;AACA,SAAKY,kBAAL;AACE;AACA,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,GAAG,EAAEG,MAAM,CAACE;AAFP,OAAP;;AAKF,SAAKjB,oBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,GAAG,EAAE,CAAC,GAAGE,KAAK,CAACF,GAAV,EAAeG,MAAM,CAACE,OAAtB;AAFA,OAAP;;AAKF,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,GAAG,EAAE,CACH,GAAGE,KAAK,CAACF,GAAN,CAAUM,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAApD,CADA,EAEHL,MAAM,CAACE,OAFJ;AAFA,OAAP;;AAQF,SAAKd,mBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,GAAG,EAAEE,KAAK,CAACF,GAAN,CAAUM,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAApD;AAFA,OAAP;;AAKF,SAAKtB,sBAAL;AACA,SAAKG,mBAAL;AACA,SAAKG,kBAAL;AACA,SAAKE,kBAAL;AACA,SAAKE,iBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,GAAG,EAAEE,MAAM,CAACE;AAFP,OAAP;;AAIF;AACE,aAAOH,KAAP;AA9CJ;AAgDD,CAjDD","sourcesContent":["import {\n  FETCH_ALL_USERS_PENDING,\n  FETCH_ALL_USERS_SUCCESS,\n  FETCH_ALL_USERS_FAILED,\n  ADD_NEW_USER_PENDING,\n  ADD_NEW_USER_SUCCESS,\n  ADD_NEW_USER_FAILED,\n  DELETE_USER_PENDING,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAILED,\n  UPDATE_USER_PENDING,\n  UPDATE_USER_FAILED,\n  UPDATE_USER_SUCCESS,\n  FETCH_USER_FAILED,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_PENDING\n} from \"./constants\";\n\n//Using a default logged in user ID: 1, until authentication and login properly owrks.\nconst initialState = {\n  all: [],\n  err: {}\n  // loggedInUser: 1\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL_USERS_PENDING:\n    case ADD_NEW_USER_PENDING:\n    case DELETE_USER_PENDING:\n    case UPDATE_USER_PENDING:\n    case FETCH_USER_PENDING:\n      return state;\n    case FETCH_ALL_USERS_SUCCESS:\n    case FETCH_USER_SUCCESS:\n      // case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        all: action.payload\n      };\n\n    case ADD_NEW_USER_SUCCESS:\n      return {\n        ...state,\n        all: [...state.all, action.payload]\n      };\n\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        all: [\n          ...state.all.filter(USER => USER.id !== action.payload.id),\n          action.payload\n        ]\n      };\n\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        all: state.all.filter(USER => USER.id !== action.payload.id)\n      };\n\n    case FETCH_ALL_USERS_FAILED:\n    case ADD_NEW_USER_FAILED:\n    case DELETE_USER_FAILED:\n    case UPDATE_USER_FAILED:\n    case FETCH_USER_FAILED:\n      return {\n        ...state,\n        err: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}